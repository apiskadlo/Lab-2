ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * File Name          : main.c
   5:Src/main.c    ****   * Description        : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "stm32f0xx_hal.h"
  43:Src/main.c    **** void _Error_Handler(char * file, int line);
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** int main(void)
  69:Src/main.c    **** {
  70:Src/main.c    **** 
  71:Src/main.c    ****    // HAL_Init();
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* USER CODE BEGIN Init */
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* USER CODE END Init */
  76:Src/main.c    **** 
  77:Src/main.c    **** 
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END SysInit */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Initialize all configured peripherals */
  84:Src/main.c    ****   /* USER CODE BEGIN 2 */
  85:Src/main.c    ****   HAL_Init(); // Reset of all peripherals, init the Flash and Systick
  86:Src/main.c    ****   SystemClock_Config(); //Configure the system clock
  87:Src/main.c    ****   /* This example uses HAL library calls to control
  88:Src/main.c    **** the GPIOC peripheral. Youâ€™ll be redoing this code
  89:Src/main.c    **** with hardware register access. */
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 3


  90:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  91:Src/main.c    ****   /* Enable Peripheral Clocks in RCC ---------------------------------------*/
  92:Src/main.c    **** RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
  93:Src/main.c    **** RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  94:Src/main.c    **** RCC->APB2ENR |= RCC_APB2ENR_SYSCFGCOMPEN;
  95:Src/main.c    **** RCC->APB1ENR |= RCC_AHBENR_GPIOCEN; // Enable peripheral clock to TIMER2// Enable the GPIOC clock i
  96:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
  97:Src/main.c    ****       //GPIOA -> 
  98:Src/main.c    ****       GPIOC->MODER = 0;
  99:Src/main.c    ****       //LEDS
 100:Src/main.c    ****       GPIOC->MODER = GPIOC->MODER | 1 | 1<<1;
 101:Src/main.c    ****       // Red led pin PC6 blue led PC7 green led PC8 yellow led PC9
 102:Src/main.c    ****       GPIOC->MODER = GPIOC->MODER  | 1<<12 | 1<<14 |  1<<16 | 1<<18 ;
 103:Src/main.c    ****        //Set Red Pin 6 and Green pin 8 to high
 104:Src/main.c    ****     //  GPIOC -> BSRR = GPIOC -> BSRR | 1<<6 | 1<< 8;
 105:Src/main.c    **** 
 106:Src/main.c    ****       // Drain Led to reset state
 107:Src/main.c    ****       GPIOC->OTYPER = GPIOC->OTYPER | 0<<6 | 0<<7| 0<<8 | 0<<9;
 108:Src/main.c    ****       // Led to internal output speed to slow
 109:Src/main.c    ****       GPIOC->OSPEEDR = GPIOC->OSPEEDR | 1<<12 | 1<<14 |  1<<16 | 1<<18 ;
 110:Src/main.c    ****       // Pullup/pulldown register
 111:Src/main.c    ****       GPIOC->PUPDR = GPIOC->PUPDR | 0<<12 | 0<<13 | 0<<14 | 0<<15 | 0<<16 | 0<<17 | 0<<18 | 0<<19;
 112:Src/main.c    ****       //user button B1
 113:Src/main.c    ****       GPIOA->MODER = GPIOA->MODER | 0<<0 | 0<<1 ;
 114:Src/main.c    ****       uint32_t debouncer = 0;
 115:Src/main.c    **** 
 116:Src/main.c    **** while(1){
 117:Src/main.c    ****  // GPIOC -> BSRR ^= 1<<6;
 118:Src/main.c    ****  // HAL_Delay(400);
 119:Src/main.c    ****     debouncer = (debouncer << 1); // Always shift every loop iteration
 120:Src/main.c    ****     if (GPIOA->IDR & 1<<0 ) {
 121:Src/main.c    **** 
 122:Src/main.c    ****       debouncer |= 0x01; // Set lowest bit of bit-vector
 123:Src/main.c    **** 
 124:Src/main.c    ****       continue;
 125:Src/main.c    ****     }
 126:Src/main.c    ****     if (debouncer == 0xFFFFFFFF) {
 127:Src/main.c    ****       GPIOC -> BSRR ^= 1<<6;
 128:Src/main.c    ****       GPIOC -> BSRR ^= 1<<7;
 129:Src/main.c    ****     // This code triggers repeatedly when button is steady high!
 130:Src/main.c    ****     }
 131:Src/main.c    ****     if (debouncer == 0x00000000) {
 132:Src/main.c    ****     // This code triggers repeatedly when button is steady low!
 133:Src/main.c    ****     }
 134:Src/main.c    ****     if (debouncer == 0x7FFFFFFF) {
 135:Src/main.c    ****     // This code triggers only once when transitioning to steady high!
 136:Src/main.c    **** 
 137:Src/main.c    ****     }
 138:Src/main.c    **** 
 139:Src/main.c    ****     else {
 140:Src/main.c    **** 
 141:Src/main.c    ****     }
 142:Src/main.c    ****   }
 143:Src/main.c    **** }
 144:Src/main.c    **** 
 145:Src/main.c    **** 
 146:Src/main.c    **** 
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 4


 147:Src/main.c    **** /** System Clock Configuration
 148:Src/main.c    **** */
 149:Src/main.c    **** void SystemClock_Config(void)
 150:Src/main.c    **** {
 151:Src/main.c    **** 
 152:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 153:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 154:Src/main.c    **** 
 155:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 156:Src/main.c    ****     */
 157:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 158:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 159:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 161:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 162:Src/main.c    ****   {
 163:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 164:Src/main.c    ****   }
 165:Src/main.c    **** 
 166:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 167:Src/main.c    ****     */
 168:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 169:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 170:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 171:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 172:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 173:Src/main.c    **** 
 174:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 175:Src/main.c    ****   {
 176:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 177:Src/main.c    ****   }
 178:Src/main.c    **** 
 179:Src/main.c    ****     /**Configure the Systick interrupt time
 180:Src/main.c    ****     */
 181:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 182:Src/main.c    **** 
 183:Src/main.c    ****     /**Configure the Systick
 184:Src/main.c    ****     */
 185:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 186:Src/main.c    **** 
 187:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 188:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 189:Src/main.c    **** }
 190:Src/main.c    **** 
 191:Src/main.c    **** /* USER CODE BEGIN 4 */
 192:Src/main.c    **** 
 193:Src/main.c    **** /* USER CODE END 4 */
 194:Src/main.c    **** 
 195:Src/main.c    **** /**
 196:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 197:Src/main.c    ****   * @param  None
 198:Src/main.c    ****   * @retval None
 199:Src/main.c    ****   */
 200:Src/main.c    **** void _Error_Handler(char * file, int line)
 201:Src/main.c    **** {
  27              		.loc 1 201 1 view -0
  28              		.cfi_startproc
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 5


  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 202:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 203:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 204:Src/main.c    ****   while(1)
  35              		.loc 1 204 3 view .LVU1
 205:Src/main.c    ****   {
 206:Src/main.c    ****   }
  36              		.loc 1 206 3 view .LVU2
 204:Src/main.c    ****   {
  37              		.loc 1 204 8 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 150:Src/main.c    **** 
  56              		.loc 1 150 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 152:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 152 3 view .LVU5
 153:Src/main.c    **** 
  68              		.loc 1 153 3 view .LVU6
 157:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 157 3 view .LVU7
 157:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 157 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 158:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 158 3 is_stmt 1 view .LVU9
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 6


 158:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 158 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 159 3 is_stmt 1 view .LVU11
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 159 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 160:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 160 3 is_stmt 1 view .LVU13
 160:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 160 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 161:Src/main.c    ****   {
  85              		.loc 1 161 3 is_stmt 1 view .LVU15
 161:Src/main.c    ****   {
  86              		.loc 1 161 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 161:Src/main.c    ****   {
  90              		.loc 1 161 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 168:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  93              		.loc 1 168 3 is_stmt 1 view .LVU18
 168:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  94              		.loc 1 168 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 170:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 170 3 is_stmt 1 view .LVU20
 170:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 170 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 171:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 171 3 is_stmt 1 view .LVU22
 171:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 171 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 172:Src/main.c    **** 
 104              		.loc 1 172 3 is_stmt 1 view .LVU24
 172:Src/main.c    **** 
 105              		.loc 1 172 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 174:Src/main.c    ****   {
 107              		.loc 1 174 3 is_stmt 1 view .LVU26
 174:Src/main.c    ****   {
 108              		.loc 1 174 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 7


 174:Src/main.c    ****   {
 113              		.loc 1 174 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 181:Src/main.c    **** 
 116              		.loc 1 181 3 is_stmt 1 view .LVU29
 181:Src/main.c    **** 
 117              		.loc 1 181 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 181:Src/main.c    **** 
 120              		.loc 1 181 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 185:Src/main.c    **** 
 127              		.loc 1 185 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 188:Src/main.c    **** }
 131              		.loc 1 188 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 189:Src/main.c    **** 
 138              		.loc 1 189 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 163:Src/main.c    ****   }
 143              		.loc 1 163 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e A321     		movs	r1, #163
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 176:Src/main.c    ****   }
 149              		.loc 1 176 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 B021     		movs	r1, #176
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 8


 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  69:Src/main.c    **** 
 170              		.loc 1 69 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 8
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 00B5     		push	{lr}
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 14, -4
 178 0002 83B0     		sub	sp, sp, #12
 179              	.LCFI3:
 180              		.cfi_def_cfa_offset 16
  85:Src/main.c    ****   SystemClock_Config(); //Configure the system clock
 181              		.loc 1 85 3 view .LVU38
 182 0004 FFF7FEFF 		bl	HAL_Init
 183              	.LVL10:
  86:Src/main.c    ****   /* This example uses HAL library calls to control
 184              		.loc 1 86 3 view .LVU39
 185 0008 FFF7FEFF 		bl	SystemClock_Config
 186              	.LVL11:
  90:Src/main.c    ****   /* Enable Peripheral Clocks in RCC ---------------------------------------*/
 187              		.loc 1 90 3 view .LVU40
 188              	.LBB2:
  90:Src/main.c    ****   /* Enable Peripheral Clocks in RCC ---------------------------------------*/
 189              		.loc 1 90 3 view .LVU41
  90:Src/main.c    ****   /* Enable Peripheral Clocks in RCC ---------------------------------------*/
 190              		.loc 1 90 3 view .LVU42
 191 000c 234B     		ldr	r3, .L16
 192 000e 5969     		ldr	r1, [r3, #20]
 193 0010 8022     		movs	r2, #128
 194 0012 1203     		lsls	r2, r2, #12
 195 0014 1143     		orrs	r1, r2
 196 0016 5961     		str	r1, [r3, #20]
  90:Src/main.c    ****   /* Enable Peripheral Clocks in RCC ---------------------------------------*/
 197              		.loc 1 90 3 view .LVU43
 198 0018 5969     		ldr	r1, [r3, #20]
 199 001a 1140     		ands	r1, r2
 200 001c 0191     		str	r1, [sp, #4]
  90:Src/main.c    ****   /* Enable Peripheral Clocks in RCC ---------------------------------------*/
 201              		.loc 1 90 3 view .LVU44
 202 001e 0199     		ldr	r1, [sp, #4]
 203              	.LBE2:
  90:Src/main.c    ****   /* Enable Peripheral Clocks in RCC ---------------------------------------*/
 204              		.loc 1 90 3 view .LVU45
  92:Src/main.c    **** RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 205              		.loc 1 92 1 view .LVU46
  92:Src/main.c    **** RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 206              		.loc 1 92 4 is_stmt 0 view .LVU47
 207 0020 5869     		ldr	r0, [r3, #20]
  92:Src/main.c    **** RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 9


 208              		.loc 1 92 13 view .LVU48
 209 0022 8021     		movs	r1, #128
 210 0024 8902     		lsls	r1, r1, #10
 211 0026 0143     		orrs	r1, r0
 212 0028 5961     		str	r1, [r3, #20]
  93:Src/main.c    **** RCC->APB2ENR |= RCC_APB2ENR_SYSCFGCOMPEN;
 213              		.loc 1 93 1 is_stmt 1 view .LVU49
  93:Src/main.c    **** RCC->APB2ENR |= RCC_APB2ENR_SYSCFGCOMPEN;
 214              		.loc 1 93 4 is_stmt 0 view .LVU50
 215 002a 5969     		ldr	r1, [r3, #20]
  93:Src/main.c    **** RCC->APB2ENR |= RCC_APB2ENR_SYSCFGCOMPEN;
 216              		.loc 1 93 13 view .LVU51
 217 002c 1143     		orrs	r1, r2
 218 002e 5961     		str	r1, [r3, #20]
  94:Src/main.c    **** RCC->APB1ENR |= RCC_AHBENR_GPIOCEN; // Enable peripheral clock to TIMER2// Enable the GPIOC clock i
 219              		.loc 1 94 1 is_stmt 1 view .LVU52
  94:Src/main.c    **** RCC->APB1ENR |= RCC_AHBENR_GPIOCEN; // Enable peripheral clock to TIMER2// Enable the GPIOC clock i
 220              		.loc 1 94 4 is_stmt 0 view .LVU53
 221 0030 9969     		ldr	r1, [r3, #24]
  94:Src/main.c    **** RCC->APB1ENR |= RCC_AHBENR_GPIOCEN; // Enable peripheral clock to TIMER2// Enable the GPIOC clock i
 222              		.loc 1 94 14 view .LVU54
 223 0032 0120     		movs	r0, #1
 224 0034 0143     		orrs	r1, r0
 225 0036 9961     		str	r1, [r3, #24]
  95:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
 226              		.loc 1 95 1 is_stmt 1 view .LVU55
  95:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
 227              		.loc 1 95 4 is_stmt 0 view .LVU56
 228 0038 D969     		ldr	r1, [r3, #28]
  95:Src/main.c    ****   // Set up a configuration struct to pass to the initialization function
 229              		.loc 1 95 14 view .LVU57
 230 003a 0A43     		orrs	r2, r1
 231 003c DA61     		str	r2, [r3, #28]
  98:Src/main.c    ****       //LEDS
 232              		.loc 1 98 7 is_stmt 1 view .LVU58
  98:Src/main.c    ****       //LEDS
 233              		.loc 1 98 20 is_stmt 0 view .LVU59
 234 003e 184B     		ldr	r3, .L16+4
 235 0040 0022     		movs	r2, #0
 236 0042 1A60     		str	r2, [r3]
 100:Src/main.c    ****       // Red led pin PC6 blue led PC7 green led PC8 yellow led PC9
 237              		.loc 1 100 7 is_stmt 1 view .LVU60
 100:Src/main.c    ****       // Red led pin PC6 blue led PC7 green led PC8 yellow led PC9
 238              		.loc 1 100 27 is_stmt 0 view .LVU61
 239 0044 1A68     		ldr	r2, [r3]
 100:Src/main.c    ****       // Red led pin PC6 blue led PC7 green led PC8 yellow led PC9
 240              		.loc 1 100 39 view .LVU62
 241 0046 0321     		movs	r1, #3
 242 0048 0A43     		orrs	r2, r1
 100:Src/main.c    ****       // Red led pin PC6 blue led PC7 green led PC8 yellow led PC9
 243              		.loc 1 100 20 view .LVU63
 244 004a 1A60     		str	r2, [r3]
 102:Src/main.c    ****        //Set Red Pin 6 and Green pin 8 to high
 245              		.loc 1 102 7 is_stmt 1 view .LVU64
 102:Src/main.c    ****        //Set Red Pin 6 and Green pin 8 to high
 246              		.loc 1 102 27 is_stmt 0 view .LVU65
 247 004c 1968     		ldr	r1, [r3]
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 10


 102:Src/main.c    ****        //Set Red Pin 6 and Green pin 8 to high
 248              		.loc 1 102 61 view .LVU66
 249 004e AA22     		movs	r2, #170
 250 0050 D202     		lsls	r2, r2, #11
 251 0052 1143     		orrs	r1, r2
 102:Src/main.c    ****        //Set Red Pin 6 and Green pin 8 to high
 252              		.loc 1 102 20 view .LVU67
 253 0054 1960     		str	r1, [r3]
 107:Src/main.c    ****       // Led to internal output speed to slow
 254              		.loc 1 107 7 is_stmt 1 view .LVU68
 107:Src/main.c    ****       // Led to internal output speed to slow
 255              		.loc 1 107 28 is_stmt 0 view .LVU69
 256 0056 5968     		ldr	r1, [r3, #4]
 107:Src/main.c    ****       // Led to internal output speed to slow
 257              		.loc 1 107 21 view .LVU70
 258 0058 5960     		str	r1, [r3, #4]
 109:Src/main.c    ****       // Pullup/pulldown register
 259              		.loc 1 109 7 is_stmt 1 view .LVU71
 109:Src/main.c    ****       // Pullup/pulldown register
 260              		.loc 1 109 29 is_stmt 0 view .LVU72
 261 005a 9968     		ldr	r1, [r3, #8]
 109:Src/main.c    ****       // Pullup/pulldown register
 262              		.loc 1 109 64 view .LVU73
 263 005c 0A43     		orrs	r2, r1
 109:Src/main.c    ****       // Pullup/pulldown register
 264              		.loc 1 109 22 view .LVU74
 265 005e 9A60     		str	r2, [r3, #8]
 111:Src/main.c    ****       //user button B1
 266              		.loc 1 111 7 is_stmt 1 view .LVU75
 111:Src/main.c    ****       //user button B1
 267              		.loc 1 111 27 is_stmt 0 view .LVU76
 268 0060 DA68     		ldr	r2, [r3, #12]
 111:Src/main.c    ****       //user button B1
 269              		.loc 1 111 20 view .LVU77
 270 0062 DA60     		str	r2, [r3, #12]
 113:Src/main.c    ****       uint32_t debouncer = 0;
 271              		.loc 1 113 7 is_stmt 1 view .LVU78
 113:Src/main.c    ****       uint32_t debouncer = 0;
 272              		.loc 1 113 27 is_stmt 0 view .LVU79
 273 0064 9023     		movs	r3, #144
 274 0066 DB05     		lsls	r3, r3, #23
 275 0068 1A68     		ldr	r2, [r3]
 113:Src/main.c    ****       uint32_t debouncer = 0;
 276              		.loc 1 113 20 view .LVU80
 277 006a 1A60     		str	r2, [r3]
 114:Src/main.c    **** 
 278              		.loc 1 114 7 is_stmt 1 view .LVU81
 279              	.LVL12:
 114:Src/main.c    **** 
 280              		.loc 1 114 16 is_stmt 0 view .LVU82
 281 006c 0023     		movs	r3, #0
 282 006e 01E0     		b	.L11
 283              	.LVL13:
 284              	.L12:
 126:Src/main.c    ****       GPIOC -> BSRR ^= 1<<6;
 285              		.loc 1 126 5 is_stmt 1 view .LVU83
 126:Src/main.c    ****       GPIOC -> BSRR ^= 1<<6;
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 11


 286              		.loc 1 126 8 is_stmt 0 view .LVU84
 287 0070 5A1C     		adds	r2, r3, #1
 288 0072 08D0     		beq	.L15
 289              	.LVL14:
 290              	.L11:
 116:Src/main.c    ****  // GPIOC -> BSRR ^= 1<<6;
 291              		.loc 1 116 1 is_stmt 1 view .LVU85
 119:Src/main.c    ****     if (GPIOA->IDR & 1<<0 ) {
 292              		.loc 1 119 5 view .LVU86
 119:Src/main.c    ****     if (GPIOA->IDR & 1<<0 ) {
 293              		.loc 1 119 15 is_stmt 0 view .LVU87
 294 0074 5B00     		lsls	r3, r3, #1
 295              	.LVL15:
 120:Src/main.c    **** 
 296              		.loc 1 120 5 is_stmt 1 view .LVU88
 120:Src/main.c    **** 
 297              		.loc 1 120 14 is_stmt 0 view .LVU89
 298 0076 9022     		movs	r2, #144
 299 0078 D205     		lsls	r2, r2, #23
 300 007a 1269     		ldr	r2, [r2, #16]
 120:Src/main.c    **** 
 301              		.loc 1 120 8 view .LVU90
 302 007c D207     		lsls	r2, r2, #31
 303 007e F7D5     		bpl	.L12
 122:Src/main.c    **** 
 304              		.loc 1 122 7 is_stmt 1 view .LVU91
 122:Src/main.c    **** 
 305              		.loc 1 122 17 is_stmt 0 view .LVU92
 306 0080 0122     		movs	r2, #1
 307 0082 1343     		orrs	r3, r2
 308              	.LVL16:
 124:Src/main.c    ****     }
 309              		.loc 1 124 7 is_stmt 1 view .LVU93
 310 0084 F6E7     		b	.L11
 311              	.L15:
 127:Src/main.c    ****       GPIOC -> BSRR ^= 1<<7;
 312              		.loc 1 127 7 view .LVU94
 127:Src/main.c    ****       GPIOC -> BSRR ^= 1<<7;
 313              		.loc 1 127 13 is_stmt 0 view .LVU95
 314 0086 064A     		ldr	r2, .L16+4
 315 0088 9169     		ldr	r1, [r2, #24]
 127:Src/main.c    ****       GPIOC -> BSRR ^= 1<<7;
 316              		.loc 1 127 21 view .LVU96
 317 008a 4020     		movs	r0, #64
 318 008c 4140     		eors	r1, r0
 319 008e 9161     		str	r1, [r2, #24]
 128:Src/main.c    ****     // This code triggers repeatedly when button is steady high!
 320              		.loc 1 128 7 is_stmt 1 view .LVU97
 128:Src/main.c    ****     // This code triggers repeatedly when button is steady high!
 321              		.loc 1 128 13 is_stmt 0 view .LVU98
 322 0090 9169     		ldr	r1, [r2, #24]
 128:Src/main.c    ****     // This code triggers repeatedly when button is steady high!
 323              		.loc 1 128 21 view .LVU99
 324 0092 4030     		adds	r0, r0, #64
 325 0094 4140     		eors	r1, r0
 326 0096 9161     		str	r1, [r2, #24]
 327 0098 ECE7     		b	.L11
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 12


 328              	.L17:
 329 009a C046     		.align	2
 330              	.L16:
 331 009c 00100240 		.word	1073876992
 332 00a0 00080048 		.word	1207961600
 333              		.cfi_endproc
 334              	.LFE40:
 336              		.text
 337              	.Letext0:
 338              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 339              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 340              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 341              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 342              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 343              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 344              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s:19     .text._Error_Handler:00000000 $t
/var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s:162    .text.main:00000000 $t
/var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s:168    .text.main:00000000 main
/var/folders/m0/5g18t8b543bczxmvmddw3r9c0000gn/T//ccIShv36.s:331    .text.main:0000009c $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
